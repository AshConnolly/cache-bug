import '@pigment-css/react/styles.css'
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'

const InterSans = Inter({
  variable: '--font-inter-sans',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

import { ThemeProvider } from '@/providers/theme-provider'

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${InterSans.variable} antialiased`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          themes={['light', 'dark']}
          enableSystem
          disableTransitionOnChange
        >
          {children}
        </ThemeProvider>
      </body>
    </html>
  )
}

/*
  [1] suppressHydrationWarning is used on html tags as next-themes sets the theme class on html on the client, which does not match the servers html
  - next-themes handles the local storage check on load and sets the theme class on the html tag in a render-blocking script - https://github.com/pacocoursey/next-themes/blob/c89d0191ce0f19215d7ddfa9eb28e1e4f94d37e5/next-themes/src/script.ts#L38
  the same as the rauchg solution - https://github.com/rauchg/blog/blob/main/app/theme-effect.ts
*/
